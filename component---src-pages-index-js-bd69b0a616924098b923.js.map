{"version":3,"sources":["webpack:///./src/components/Adsense/index.js","webpack:///./src/templates/Post/index.js","webpack:///./src/pages/index.js"],"names":["components_Adsense","componentDidMount","this","props","clientId","window","adsbygoogle","push","render","_this$props","slotId","format","react_default","a","createElement","className","style","display","data-ad-client","data-ad-slot","data-ad-format","t","Component","Post_getAd","__webpack_exports__","_ref","data","options","_data$frontmatter","frontmatter","category","tags","description","title","path","date","image","isIndex","adsense","html","get_default","isMore","match","fixed","key","gatsby_browser_entry","Link","boxShadow","to","dateTime","Post_Badges","items","primary","gatsby_image_default","margin","dangerouslySetInnerHTML","__html","getDescription","Post_Button","label","body","replace","split","_ref2","_ref3","map_default","item","i","location","posts","lodash_get__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_0___default","components_Layout__WEBPACK_IMPORTED_MODULE_4__","components_Meta__WEBPACK_IMPORTED_MODULE_3__","site","map","post","templates_Post__WEBPACK_IMPORTED_MODULE_2__","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-bd69b0a616924098b923.js","sourcesContent":["import React from 'react'\n\nclass Adsense extends React.Component {\n  componentDidMount() {\n    const { clientId } = this.props\n    if (clientId) {\n      ;(window.adsbygoogle = window.adsbygoogle || []).push({})\n    }\n  }\n\n  render() {\n    const { clientId, slotId, format } = this.props\n\n    return clientId ? (\n      <div className=\"ad\">\n        <ins\n          className=\"adsbygoogle\"\n          style={{ display: 'block' }}\n          data-ad-client={clientId}\n          data-ad-slot={slotId}\n          data-ad-format={format}\n        />\n      </div>\n    ) : (\n      ''\n    )\n  }\n}\nexport default Adsense\n","import { Link } from 'gatsby'\nimport get from 'lodash/get'\nimport React from 'react'\nimport map from 'lodash/map'\nimport Img from 'gatsby-image'\n\nimport Adsense from 'components/Adsense'\nimport Footer from 'components/Footer'\nimport './style.scss'\n\nconst Post = ({ data, options }) => {\n  const {\n    category,\n    tags,\n    description,\n    title,\n    path,\n    date,\n    image,\n  } = data.frontmatter\n  const { isIndex, adsense } = options\n  const html = get(data, 'html')\n  const isMore = isIndex && !!html.match('<!--more-->')\n  const fixed = get(image, 'childImageSharp.fixed')\n\n  return (\n    <div className=\"article\" key={path}>\n      <div className=\"container\">\n        <div className=\"info\">\n          <Link style={{ boxShadow: 'none' }} to={path}>\n            <h1>{title}</h1>\n            <time dateTime={date}>{date}</time>\n          </Link>\n          {Badges({ items: [category], primary: true })}\n          {Badges({ items: tags })}\n        </div>\n        <div className=\"content\">\n          <p>{description}</p>\n          {fixed ? (\n            <Img fixed={fixed} style={{ display: 'block', margin: '0 auto' }} />\n          ) : (\n            ''\n          )}\n        </div>\n        <div\n          className=\"content\"\n          dangerouslySetInnerHTML={{\n            __html: isMore ? getDescription(html) : html,\n          }}\n        />\n        {isMore ? Button({ path, label: 'MORE', primary: true }) : ''}\n        {getAd(isIndex, adsense)}\n      </div>\n    </div>\n  )\n}\n\nexport default Post\n\nconst getAd = (isIndex, adsense) => {\n  return !isIndex ? <Adsense clientId={adsense} slotId=\"\" format=\"auto\" /> : ''\n}\n\nconst getDescription = body => {\n  body = body.replace(/<blockquote>/g, '<blockquote class=\"blockquote\">')\n  if (body.match('<!--more-->')) {\n    body = body.split('<!--more-->')\n    if (typeof body[0] !== 'undefined') {\n      return body[0]\n    }\n  }\n  return body\n}\n\nconst Button = ({ path, label, primary }) => (\n  <Link className=\"readmore\" to={path}>\n    <span\n      className={`btn btn-outline-primary btn-block ${\n        primary ? 'btn-outline-primary' : 'btn-outline-secondary'\n      }`}\n    >\n      {label}\n    </span>\n  </Link>\n)\n\nconst Badges = ({ items, primary }) =>\n  map(items, (item, i) => {\n    return (\n      <span\n        className={`badge ${primary ? 'badge-primary' : 'badge-secondary'}`}\n        key={i}\n      >\n        {item}\n      </span>\n    )\n  })\n","import { graphql } from 'gatsby'\nimport React from 'react'\nimport get from 'lodash/get'\n\nimport Post from 'templates/Post'\nimport Meta from 'components/Meta'\nimport Layout from 'components/Layout'\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = get(data, 'remark.posts')\n  return (\n    <Layout location={location}>\n      <Meta site={get(data, 'site.meta')} />\n      {posts.map(({ post }, i) => (\n        <Post\n          data={post}\n          options={{\n            isIndex: true,\n          }}\n          key={i}\n        />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      meta: siteMetadata {\n        title\n        description\n        url: siteUrl\n        author\n        twitter\n        adsense\n      }\n    }\n    remark: allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      posts: edges {\n        post: node {\n          html\n          frontmatter {\n            layout\n            title\n            path\n            category\n            description\n            date(formatString: \"YYYY/MM/DD\")\n            image {\n              childImageSharp {\n                fixed(width: 500) {\n                  ...GatsbyImageSharpFixed_withWebp\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}